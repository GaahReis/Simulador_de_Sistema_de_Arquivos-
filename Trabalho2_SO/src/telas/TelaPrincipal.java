/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import application.ArquivoController;
import application.ThreadController;
import helper.ArquivoHelper;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.ListModel;
import models.Arquivo;
import manager.ArquivoManager;

public class TelaPrincipal extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
    
    private ArquivoManager arqMestre;
    
    private File pathArqMestre;
    
    int posicaoArquivoAux;
    
    public TelaPrincipal(ArquivoManager arqM) {
        initComponents();
        this.setLocationRelativeTo(null);
        TelaPrincipal.this.setVisible(true);
        arqMestre = arqM;
        
        btnExibirCont.setEnabled(false);
        btnRemoverArquivo.setEnabled(false);
        
        
        if (arqM.getArquivos() != null)
            atualizaOutput();
    }

    private TelaPrincipal() {
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnInserirArquivo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstArquivos = new javax.swing.JList<>();
        pnlInfoArquivo = new javax.swing.JPanel();
        lblNomeArquivo = new javax.swing.JLabel();
        lblExtensao = new javax.swing.JLabel();
        lblDataCriacao = new javax.swing.JLabel();
        lblPathOrigem = new javax.swing.JLabel();
        lblTamArquivo = new javax.swing.JLabel();
        btnRemoverArquivo = new javax.swing.JButton();
        btnExibirCont = new javax.swing.JButton();
        btnDesfrag = new javax.swing.JButton();
        btnLimparArquivoMestre = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnInserirArquivo.setText("Inserir Arquivo");
        btnInserirArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirArquivoActionPerformed(evt);
            }
        });

        lstArquivos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstArquivosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstArquivos);

        pnlInfoArquivo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNomeArquivo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblNomeArquivo.setText("Nome do arquivo:");

        lblExtensao.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblExtensao.setText("Extensão:");

        lblDataCriacao.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblDataCriacao.setText("Data de criação:");

        lblPathOrigem.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblPathOrigem.setText("Path origem:");

        lblTamArquivo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lblTamArquivo.setText("Tamanho do arquivo:");

        javax.swing.GroupLayout pnlInfoArquivoLayout = new javax.swing.GroupLayout(pnlInfoArquivo);
        pnlInfoArquivo.setLayout(pnlInfoArquivoLayout);
        pnlInfoArquivoLayout.setHorizontalGroup(
            pnlInfoArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoArquivoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomeArquivo)
                    .addComponent(lblExtensao)
                    .addComponent(lblDataCriacao)
                    .addComponent(lblPathOrigem)
                    .addComponent(lblTamArquivo))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        pnlInfoArquivoLayout.setVerticalGroup(
            pnlInfoArquivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoArquivoLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblNomeArquivo)
                .addGap(27, 27, 27)
                .addComponent(lblExtensao)
                .addGap(26, 26, 26)
                .addComponent(lblDataCriacao)
                .addGap(27, 27, 27)
                .addComponent(lblPathOrigem)
                .addGap(28, 28, 28)
                .addComponent(lblTamArquivo)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        btnRemoverArquivo.setText("Remover Arquivo");
        btnRemoverArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverArquivoActionPerformed(evt);
            }
        });

        btnExibirCont.setText("Exibir Conteúdo");
        btnExibirCont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExibirContActionPerformed(evt);
            }
        });

        btnDesfrag.setText("Desfragmentar");
        btnDesfrag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesfragActionPerformed(evt);
            }
        });

        btnLimparArquivoMestre.setText("Limpar Arquivo Mestre");
        btnLimparArquivoMestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparArquivoMestreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInserirArquivo)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoverArquivo)
                        .addGap(18, 18, 18)
                        .addComponent(btnExibirCont)
                        .addGap(18, 18, 18)
                        .addComponent(btnDesfrag)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimparArquivoMestre))
                    .addComponent(pnlInfoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInserirArquivo)
                            .addComponent(btnRemoverArquivo)
                            .addComponent(btnExibirCont)
                            .addComponent(btnDesfrag)
                            .addComponent(btnLimparArquivoMestre))
                        .addGap(27, 27, 27)
                        .addComponent(pnlInfoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirArquivoActionPerformed
        JFileChooser fc = new JFileChooser(new File("./"));
        fc.setVisible(true);
        fc.setApproveButtonText("Inserir");
        
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            Arquivo arq = ArquivoHelper.fileToArquivo(fc.getSelectedFile());
            ArquivoController.insereArquivo(arqMestre, arq);

            atualizaOutput();
        }
        
    }//GEN-LAST:event_btnInserirArquivoActionPerformed

    private void lstArquivosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstArquivosValueChanged

        if (!evt.getValueIsAdjusting() && !lstArquivos.isSelectionEmpty() && this.arqMestre.getArquivos().size() > 0) {
            int posicaoArquivoSelecionado = this.lstArquivos.getSelectedIndex();
            Arquivo arqSelecionado = this.arqMestre.getArquivos().get(posicaoArquivoSelecionado);
            
            atualizaInfoArquivo(arqSelecionado);
            
            if (arqSelecionado.isVazio()) {
                btnRemoverArquivo.setEnabled(false);
            } else {
                btnRemoverArquivo.setEnabled(true);
            }

            if(!arqSelecionado.isVazio() && arqSelecionado.getCabecalho().getExtensao(arqSelecionado.isVazio()).equals(".txt")) {
                btnExibirCont.setEnabled(true);
            } else {
                btnExibirCont.setEnabled(false);
            }
            
        }
    }//GEN-LAST:event_lstArquivosValueChanged

    private void btnRemoverArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverArquivoActionPerformed
        
        int posicaoSelecionado = this.lstArquivos.getSelectedIndex();
        
        Arquivo arqS = arqMestre.getArquivos().get(posicaoSelecionado);
        
        JFileChooser fc = new JFileChooser(new File("./"));
        fc.setVisible(true);

        fc.setAcceptAllFileFilterUsed(false);
        fc.setDialogTitle("Selecione a pasta para salvar o arquivo");
        
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {             
            
            String path = fc.getSelectedFile().getAbsolutePath();
            path += "/" + arqS.getCabecalho().getNome();

            ArquivoHelper.gravarEmArquivoSimples(arqS, path);

            ArquivoController.removeArquivoByPos(arqMestre, posicaoSelecionado);

            this.btnRemoverArquivo.setEnabled(false);

            atualizaOutput();

        }
        
    }//GEN-LAST:event_btnRemoverArquivoActionPerformed

    private void btnExibirContActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExibirContActionPerformed
        
        int posicaoArquivoSelecionado = lstArquivos.getSelectedIndex();
        
        Arquivo arqSelecionado = this.arqMestre.getArquivos().get(posicaoArquivoSelecionado);
        
        JFrame telaTexto = new TelaExibeTexto(arqSelecionado);
        telaTexto.setVisible(true);
        
    }//GEN-LAST:event_btnExibirContActionPerformed

    private void btnDesfragActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesfragActionPerformed
        // TODO Eliminar os espaços de arquivos vazios, "reorganizar" vetor de arquivos
        
    	ThreadController.desfragmentar(arqMestre);
        
        atualizaOutput();
    }//GEN-LAST:event_btnDesfragActionPerformed

    private void btnLimparArquivoMestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparArquivoMestreActionPerformed
        // TODO add your handling code here:
        
    	ThreadController.limpar(arqMestre);
        
        lblNomeArquivo.setText("Nome do arquivo: ");
        lblExtensao.setText("Extensão: ");
        lblPathOrigem.setText("Path origem: ");
        lblDataCriacao.setText("Data de criação: ");
        lblTamArquivo.setText("Tamanho do arquivo: ");
        
        btnRemoverArquivo.setEnabled(false);
        
        atualizaOutput();
    }//GEN-LAST:event_btnLimparArquivoMestreActionPerformed

    private void atualizaInfoArquivo(Arquivo arq) {
        if (arq.isVazio()) {
            lblNomeArquivo.setText("Nome do arquivo: ");
        } else {
            lblNomeArquivo.setText("Nome do arquivo: " + arq.getCabecalho().getNome().substring(0, arq.getCabecalho().getPosicaoExtensao()));
        }
        
        
        lblExtensao.setText("Extensão: " + arq.getCabecalho().getExtensao(arq.isVazio()));
        
        lblPathOrigem.setText("Path origem: " + arq.getCabecalho().getCaminhoOrigem());

        if (arq.getCabecalho().getDataCriacao() != null) {
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            lblDataCriacao.setText("Data de criação: " + dateFormat.format(arq.getCabecalho().getDataCriacao()));
        } else {
            lblDataCriacao.setText("Data de criação: ");
        }

        lblTamArquivo.setText("Tamanho do arquivo: " + arq.getCabecalho().getTamanhoArquivo() + "B");

    }
    
    private void atualizaOutput() {
        DefaultListModel<String> models = new DefaultListModel<String>();
        String[] arquivos = this.arqMestre.toString().split("\n");
        
        for (String arq : arquivos) {
            models.addElement(arq);
        }
        
        lstArquivos.setModel(models);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDesfrag;
    private javax.swing.JButton btnExibirCont;
    private javax.swing.JButton btnInserirArquivo;
    private javax.swing.JButton btnLimparArquivoMestre;
    private javax.swing.JButton btnRemoverArquivo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDataCriacao;
    private javax.swing.JLabel lblExtensao;
    private javax.swing.JLabel lblNomeArquivo;
    private javax.swing.JLabel lblPathOrigem;
    private javax.swing.JLabel lblTamArquivo;
    private javax.swing.JList<String> lstArquivos;
    private javax.swing.JPanel pnlInfoArquivo;
    // End of variables declaration//GEN-END:variables
}
